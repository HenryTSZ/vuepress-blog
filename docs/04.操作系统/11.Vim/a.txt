
- `<leader> <leader> e`: 移动到单词结尾 (选择范围从左到右，从上到下)
- `<leader> <leader> w`: 移动到单词开头 (选择范围从左到右，从上到下)
- `<leader> <leader> b`: 移动到单词开头 (选择范围从右到左，从下到上)
- `<leader> <leader> ge`: 移动到单词结尾 (选择范围从右到左，从下到上)
- `<leader> <leader> j`: 移动到行开头 (选择范围在光标下方)
- `<leader> <leader> k`: 移动到行开头 (选择范围在光标上方)
- `<leader> <leader> l`: 移动到单词的开头/结尾，驼峰字母，\_,#(选择范围从左到右，从上到下)
- `<leader> <leader> h`: 移动到单词的开头/结尾，驼峰字母，\_,#(选择范围从右到左，从下到上)
- `<leader> <leader> <leader> j`: 移动到单词的开头/结尾，驼峰字母，\_,#(选择范围全部)

- s: 正向移动到下一个 char 所在之处
- S: 反向移动到上一个 char 所在之处

- 数字 + operation + 动作（范围）
- operation + 数字 + 动作（范围）

- 点

- m + 小写字母：单文件标记，推荐使用 mm
- m + 大写字母：多文件标记，推荐使用 mM

- ' + 标记的字母：跳转到标记的行首
- ` + 标记的字母：跳转到标记的行列，光标就在标记时的位置

- gd

- C - o: 向前跳
- C - i: 向后跳

- `c s <existing> <desired>`: 使用 `<desired>` 替换 `<existing>` 包围字符
- `y s <motion> <desired>`: 使用 `<desired>` 包围 `motion` 选中的字符
- `y s s <desired>`: 使用 `<desired>` 包围整行
- `d s <desired>`: 删除 `<desired>` 包围字符
- `S <desired>`: 使用 `<desired>` 包围在可视化模式选中的字符

`ys` 模式下 `<existing> <desired>` 取值：

- (: 使用 `( )` 包围字符，左括号是带空格的
- )/b: 使用 `()` 包围字符，右括号不带空格
- [: 使用 `[ ]` 包围字符
- ]/r: 使用 `[]` 包围字符
- {: 使用 `{ }` 包围字符
- }/B: 使用 `{}` 包围字符
- '/"/\`: 使用 ' " \` 包围字符
- `</t`: 使用 html 标签包围字符
- `>/a`: 使用 `<>` 包围字符
- `*`: 使用 `*` 包围字符

再贴一张示例图片：

![](../../.vuepress/public/img/vim/038.jpg)
